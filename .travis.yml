notifications:
  email: false

language: python            # this works for Linux but is an error on macOS or Windows
jobs:
  include:
    - name: "Python 3.8.0 on Xenial Linux"
      python: 3.8           # this works for Linux but is ignored on macOS or Windows
    - name: "Python 3.7.4 on macOS"
      os: osx
      osx_image: xcode11.2  # Python 3.7.4 running on macOS 10.14.4
      language: shell       # 'language: python' is an error on Travis CI macOS
      before_install:
        - python3 --version
    - name: "Python 3.8.0 on Windows"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: shell       # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python --version 3.8.0
        - python -m pip install --upgrade pip
        - choco install advanced-installer
      env: PATH=/c/Python38:/c/Python38/Scripts:$PATH

# install dependencies
install:
  - pip3 install --upgrade pip  # all three OSes agree about 'pip3'
  - sudo pip3 install -r requirements.txt || pip3 install -r requirements.txt
  - python3 setup.py install || python setup.py install
  - pip3 install sphinx

# commands to run tests
script:
  # open app from CLI
  - plenopticam -h
  # compile docs
  - cd docs
  - make html
  - cd ..
  # trigger unit tests (time critical travis osx due to 10min limit and output suppression in setUp function)
  - python3 -m test.unit_test || python -m test.unit_test

#before_deploy:
  - pip3 install pyinstaller
  # osx bundling
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
        npm install --global create-dmg;
        bash plenopticam/scripts/bundling/pyinst2app.sh;
        sleep 1;
        open dist/plenopticam.app;
        export RELEASE_PKG_FILE=$(ls dist/*.dmg);
    fi
  # linux bundling (with wheel upload to pypi)
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        bash plenopticam/scripts/bundling/py2bin.sh;
        dist/plenopticam;
        export RELEASE_PKG_FILE=$(ls dist/*.tar.gz);
        pip3 install --upgrade twine;
        python3 setup.py sdist bdist_wheel;
        python3 -m twine upload --repository https://test.pypi.org/legacy/ dist/* -u __token__ -p $TEST_PYPI;
        python3 -m pip install --index-url https://test.pypi.org/legacy/ plenopticam;
        export RELEASE_WHL_FILE=$(ls dist/*.whl);
    fi
  # win bundling
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then
        pip3 install pypiwin32;
        pip3 install pyinstaller --upgrade;
        plenopticam/scripts/bundling/py2exe.bat;
        sleep 1;
        plenopticam/scripts/bundling/msi_auto-gen.bat;
        export RELEASE_PKG_FILE=$(ls dist/*.msi);
    fi

before_deploy:
  - echo "deploying $RELEASE_PKG_FILE to GitHub releases"

deploy:
  # upload bundled apps to GitHub
  - provider: releases
    name: PlenoptiCam $TRAVIS_TAG
    skip_cleanup: true
    api_key:
      secure: mgks1YLiAjZzv+qEccnmm33AQP427IOr2k/fK5mezI5Ye+NzfO+vPrlSgbkO7SoqtTlApWqSOzU8UFm/1wI13T8zuo6+AJcBCv7dQAOBZNrN4eAW6yWepirHgZ7JKMwMNIUKCM2GejCi6KvA/7lQrIf7KUNZBU4QjQ5sZGKEeSudwJ+uMfnvMZvznGvunySrA6CvPXoAcZ1Xa8GwvBZPP+FZNLpfnQIZ9/xnirJyc36w69z4BhlTjnbK/VIQ6e1UqnCIIv0LjbQHLjPGRyhkU/NPRHjKmz7nlqule+Xp1iJhDrdvkXoRo0EPTmV2hjk0vjUzcWC3hqAgs7AmasbLt0nG7J9AB2SkRfMsNEN8aikixNkiyZ6zid6fiTc8ZeYGFukfxXH1rBcEJ4WCwfzBpaSjSqP6aCuZw5FRS6W45i4So+Em5TguqqlC+Hg4+K8iLdhFenZiSmzhUzZDY+nRQFqZNpc2HimEPTDM6z/+2c3pDYOMhchY5ZWxnWJ5A/m39yCgWi/zo1MPQNfsak4zN/Ymt7TTm4bUwCSlbCxQ9G9kMxntwKJhczOteLwUFMHaTrLBMflIpU6rMKetVh+dC7EtoVPkNBvfixYOXq7tgmi2T5LTLsgzSLxcZt4tzrP+lNC+Ek9Tk7wo/DWr3y8Wu+2goLjn4x+SEI6AxoiMNcU=
    file:
      - "${RELEASE_PKG_FILE}"
    draft: true
    on:
      repo: hahnec/plenopticam
#    tags: true
#    branches:
#      only:
#        - develop
#        - master

  # upload wheel file to GitHub
  - provider: releases
    name: PlenoptiCam $TRAVIS_TAG
    skip_cleanup: true
    api_key:
      secure: mgks1YLiAjZzv+qEccnmm33AQP427IOr2k/fK5mezI5Ye+NzfO+vPrlSgbkO7SoqtTlApWqSOzU8UFm/1wI13T8zuo6+AJcBCv7dQAOBZNrN4eAW6yWepirHgZ7JKMwMNIUKCM2GejCi6KvA/7lQrIf7KUNZBU4QjQ5sZGKEeSudwJ+uMfnvMZvznGvunySrA6CvPXoAcZ1Xa8GwvBZPP+FZNLpfnQIZ9/xnirJyc36w69z4BhlTjnbK/VIQ6e1UqnCIIv0LjbQHLjPGRyhkU/NPRHjKmz7nlqule+Xp1iJhDrdvkXoRo0EPTmV2hjk0vjUzcWC3hqAgs7AmasbLt0nG7J9AB2SkRfMsNEN8aikixNkiyZ6zid6fiTc8ZeYGFukfxXH1rBcEJ4WCwfzBpaSjSqP6aCuZw5FRS6W45i4So+Em5TguqqlC+Hg4+K8iLdhFenZiSmzhUzZDY+nRQFqZNpc2HimEPTDM6z/+2c3pDYOMhchY5ZWxnWJ5A/m39yCgWi/zo1MPQNfsak4zN/Ymt7TTm4bUwCSlbCxQ9G9kMxntwKJhczOteLwUFMHaTrLBMflIpU6rMKetVh+dC7EtoVPkNBvfixYOXq7tgmi2T5LTLsgzSLxcZt4tzrP+lNC+Ek9Tk7wo/DWr3y8Wu+2goLjn4x+SEI6AxoiMNcU=
    file:
      - "${RELEASE_WHL_FILE}"
    draft: true
    on:
      repo: hahnec/plenopticam
      condition: $TRAVIS_OS_NAME = linux

  # upload wheel file to PyPi
  - provider: pypi
    skip_existing: true
    cleanup: true
    distributions: sdist bdist_wheel
    server: https://upload.pypi.org/legacy/
    user: __token__
    password:
      secure: PveBH8u++hpVrgEC9p//bJctyaCfbINio6fMdjXtQ+80V0GHd4VAYN2lfP/YFh1Hn0rKjzn13HVvh0gV0NHS0z55Ui39gPqcw/7sMMcdYrkTUllcp36rJva6PfdIZS2qYPzKqGVNiqIsDZu+6mRxXKBUlCDG8NqOj6/SbwjxhhKAQQYDgq4Df1ECZJWXXXR0rp6pPKNWesIDnZFL5qnzk5iXKEZyQ9or8WH7MByLhue2n5WQbEhSuA6OUbm2YeL0n2hG0QofaY3t1jSgIqDT/FcXl4+LFMghIQokO+kVMi8FTyV6i4wLT2eVCV5DAehsbHxzyRHJZWUd0fj16Ka4o5ghM61aG2oHWHKUdqCmFGLPe/MGnQ+TX2NfGIVWIuibdMyfZb+7rIACFvY6zeaeCNqp6C8jm4RB/k/NtOv00Tre1LINmqb550LfyyyeiP4WdRIlCf0XAkNwolpnZX8ndxjd8k/w6TiaHbSHzT2sK3MTScq41/i8hY7RAeTJT4Z4m1h42hbkfBzdJeZZjDo87rFLW1YwbODPCEs4Kh7enIPZF3PxjmF4HEwml9u7t6JoY9/pWfx6Mlf5cstePqnR/F4SBc3bs+Eq3UGD2WzTbNHsZt3zPEyqDwq0xBp6NOqkUvyrd6HEv7PdikEFz+tZxjvfzMr7BBDnC2/gGnlaWpE=
    on:
      condition: $TRAVIS_OS_NAME = linux